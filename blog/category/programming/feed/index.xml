<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>Oblivion</title>
    <link>http://mrsesaman.com/blog</link>
    <description>Shall not be forgotten</description>
    <pubDate>Mon, 21 Jul 2014 22:22:14 GMT</pubDate>
    <generator>Blogofile</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>Some tips on Cachelab</title>
      <link>http://mrsesaman.com/blog/2014/03/01/some-tips-on-cachelab</link>
      <pubDate>Sat, 01 Mar 2014 05:01:18 EST</pubDate>
      <category><![CDATA[programming]]></category>
      <guid isPermaLink="false">7sL2_e99wSdCfCtv2Ub9p6CdW5M=</guid>
      <description>Some tips on Cachelab</description>
      <content:encoded><![CDATA[<p>Ok.. This lab is actually not that difficult. I just made some supid error in the c code which wasted me like 4 hours to find it out.</p>
<p>There are two parts in this lab. Part A asks you to finish a cache simulator, and part B requires you to write a program to transpose matrix with limited cache miss.</p>
<p>For part A, it should be quite easy since only hit count, miss count and eviction count are required. So just malloc some memory and then process each trace and update cache status after each trace. The results are there then.</p>
<p>For part B, it is a little tricky for the case 64 * 64 matrix. What I did is that use a 4 * 8 subset in matrix B as a buffer so it could always be hit when reading or writing these memories.</p>
<p>Assume blow is a submatrix S with size of 8 * 8. And we also vertically seperate the 4 * 8 buffer into to parts, B1 and B2.</p>
<p>|---+---| <br>
| 1 | 2 | <br>
|---+---| <br>
| 3 | 4 | <br>
|---+---| <br></p>
<p>So if we want to transpose S<sub>An</sub> into S<sub>Bm</sub>, the S<sub>Bm</sub> would be like:</p>
<p>|----+----| <br>
| 1' | 2' | <br>
|----|----| <br>
| 3' | 4' | <br>
|----|----| <br></p>
<p>Then the buffer would be of great help for us.</p>
<p>Opperations are like:</p>
<ul>
<li>1T -&gt; T1</li>
<li>2T -&gt; T2</li>
<li>4T -&gt; 4'</li>
<li>T2 -&gt; 3'</li>
<li>3T -&gt; T2</li>
<li>T1 -&gt; 1'</li>
<li>T2 -&gt; 2'</li>
</ul>
<p>These operations designed in 4 * 4 should only causes 16 misses for the transpose of a 8 * 8 submatrix.</p>]]></content:encoded>
    </item>
  </channel>
</rss>
