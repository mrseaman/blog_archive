<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">Oblivion</title>
  <subtitle type="text">Shall not be forgotten</subtitle>

  <updated>2014-07-21T22:22:14Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://mrsesaman.com/blog" />
  <id>http://mrsesaman.com/blog/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://mrsesaman.com/blog/feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://mrsesaman.com/blog</uri>
    </author>
    <title type="html"><![CDATA[注音输入法]]></title>
    <link rel="alternate" type="text/html" href="http://mrsesaman.com/blog/2014/07/21/zhu-yin-shu-ru-fa" />
    <id>http://mrsesaman.com/blog/2014/07/21/zhu-yin-shu-ru-fa</id>
    <updated>2014-07-21T18:04:00Z</updated>
    <published>2014-07-21T18:04:00Z</published>
    <category scheme="http://mrsesaman.com/blog" term="miscellaneous" />
    <summary type="html"><![CDATA[注音输入法]]></summary>
    <content type="html" xml:base="http://mrsesaman.com/blog/2014/07/21/zhu-yin-shu-ru-fa"><![CDATA[<p>这是一篇用注音输入法写出的文章！</p>
<p>发现了注音输入法的规律后学习起来就容易多了！</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://mrsesaman.com/blog</uri>
    </author>
    <title type="html"><![CDATA[S14 Summary]]></title>
    <link rel="alternate" type="text/html" href="http://mrsesaman.com/blog/2014/05/15/s14-summary" />
    <id>http://mrsesaman.com/blog/2014/05/15/s14-summary</id>
    <updated>2014-05-15T05:01:18Z</updated>
    <published>2014-05-15T05:01:18Z</published>
    <category scheme="http://mrsesaman.com/blog" term="miscellaneous" />
    <summary type="html"><![CDATA[S14 Summary]]></summary>
    <content type="html" xml:base="http://mrsesaman.com/blog/2014/05/15/s14-summary"><![CDATA[<p>All grades are given today. Sadly I got 2 Bs on 06-640 and 39-802.</p>
<p>Basically, I recognize this semester as my most hard working semester in recent few years. However, really shouldn't take 06-640. Totally lost in the content of the course.</p>
<ul>
<li>15-213 is a good course, did learn a lot from it. </li>
<li>39-802 is only based on the report, which is quite unfair.</li>
<li>06-607 introduced me into the field of surfaces and colloids. This is a quite interesting field. I'm considering pursuing Ph.D. in this field. Prof. Prieve gave lectures on a very slow speed. Tests are quite hard, but it's easy to get an A.</li>
<li>06-640 is named as "Molecular Simulation". However, Prof. Kitchin talked very little about the quantem background. Should drop this course.</li>
<li>09-611 is taught by Prof. Gary Patterson, a very nice old man. This thermal dynamic course is more related to polymer thermal dynamics.</li>
</ul>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://mrsesaman.com/blog</uri>
    </author>
    <title type="html"><![CDATA[Some tips on Cachelab]]></title>
    <link rel="alternate" type="text/html" href="http://mrsesaman.com/blog/2014/03/01/some-tips-on-cachelab" />
    <id>http://mrsesaman.com/blog/2014/03/01/some-tips-on-cachelab</id>
    <updated>2014-03-01T05:01:18Z</updated>
    <published>2014-03-01T05:01:18Z</published>
    <category scheme="http://mrsesaman.com/blog" term="programming" />
    <summary type="html"><![CDATA[Some tips on Cachelab]]></summary>
    <content type="html" xml:base="http://mrsesaman.com/blog/2014/03/01/some-tips-on-cachelab"><![CDATA[<p>Ok.. This lab is actually not that difficult. I just made some supid error in the c code which wasted me like 4 hours to find it out.</p>
<p>There are two parts in this lab. Part A asks you to finish a cache simulator, and part B requires you to write a program to transpose matrix with limited cache miss.</p>
<p>For part A, it should be quite easy since only hit count, miss count and eviction count are required. So just malloc some memory and then process each trace and update cache status after each trace. The results are there then.</p>
<p>For part B, it is a little tricky for the case 64 * 64 matrix. What I did is that use a 4 * 8 subset in matrix B as a buffer so it could always be hit when reading or writing these memories.</p>
<p>Assume blow is a submatrix S with size of 8 * 8. And we also vertically seperate the 4 * 8 buffer into to parts, B1 and B2.</p>
<p>|---+---| <br>
| 1 | 2 | <br>
|---+---| <br>
| 3 | 4 | <br>
|---+---| <br></p>
<p>So if we want to transpose S<sub>An</sub> into S<sub>Bm</sub>, the S<sub>Bm</sub> would be like:</p>
<p>|----+----| <br>
| 1' | 2' | <br>
|----|----| <br>
| 3' | 4' | <br>
|----|----| <br></p>
<p>Then the buffer would be of great help for us.</p>
<p>Opperations are like:</p>
<ul>
<li>1T -&gt; T1</li>
<li>2T -&gt; T2</li>
<li>4T -&gt; 4'</li>
<li>T2 -&gt; 3'</li>
<li>3T -&gt; T2</li>
<li>T1 -&gt; 1'</li>
<li>T2 -&gt; 2'</li>
</ul>
<p>These operations designed in 4 * 4 should only causes 16 misses for the transpose of a 8 * 8 submatrix.</p>]]></content>
  </entry>
</feed>
